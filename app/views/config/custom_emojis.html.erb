<% content_for :title, "カスタム絵文字管理 | #{blog_title}" %>
<% content_for :description, "General Letter Publication System based on ActivityPub" %>
<% content_for :head do %>
  <style>
    body { overflow-y: scroll !important; }
    
    /* Custom checkbox styles */
    .custom-checkbox:checked {
      border-color: #6b7280 !important;
      background-color: white !important;
    }
    
    .custom-checkbox:checked::after {
      content: '';
      position: absolute;
      left: 3px;
      top: 1px;
      width: 6px;
      height: 10px;
      border: solid #6b7280;
      border-width: 0 2px 2px 0;
      transform: rotate(45deg);
    }
    
    .custom-checkbox:hover {
      border-color: #9ca3af !important;
    }
  </style>
<% end %>

<h1 class="sr-only">カスタム絵文字管理</h1>

<!-- カスタム絵文字管理ページ -->
<div class="max-w-4xl mx-auto">
  <!-- ヘッダー -->
  <header class="mb-8">
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-xl sm:text-2xl text-gray-900" style="font-family: 'Noto Sans JP', sans-serif; font-weight: 300;">
          カスタム絵文字管理
        </h1>
      </div>
    </div>
  </header>

  <!-- タブナビゲーション -->
  <div class="mb-6">
    <nav class="flex space-x-1 border-b border-gray-200">
      <%= link_to config_custom_emojis_path(tab: 'local'), 
          class: "px-4 py-2 text-sm font-medium transition-colors #{@tab == 'local' ? 'border-b-2 border-gray-500 text-gray-900' : 'text-gray-500 hover:text-gray-700'}",
          style: "font-family: 'Noto Sans JP', sans-serif;" do %>
        ローカル
        <span class="ml-1 text-xs text-gray-400">(<%= CustomEmoji.local.count %>)</span>
      <% end %>
      
      <%= link_to config_custom_emojis_path(tab: 'remote'), 
          class: "px-4 py-2 text-sm font-medium transition-colors #{@tab == 'remote' ? 'border-b-2 border-gray-500 text-gray-900' : 'text-gray-500 hover:text-gray-700'}",
          style: "font-family: 'Noto Sans JP', sans-serif;" do %>
        リモート
        <span class="ml-1 text-xs text-gray-400">(<%= CustomEmoji.remote.count %>)</span>
      <% end %>
    </nav>
  </div>

  <!-- 検索・フィルター -->
  <div class="mb-6">
    <%= form_with url: config_custom_emojis_path, method: :get, 
                  data: { turbo_frame: "emoji_results" }, 
                  class: "space-y-4" do |form| %>
      
      <%= form.hidden_field :tab, value: @tab %>
      <%= form.hidden_field :page, value: params[:page] if params[:page].present? %>
      
      <div class="flex items-center space-x-4">
        <div class="flex-1">
          <%= form.text_field :q, 
              value: params[:q],
              placeholder: "絵文字名で検索...",
              class: "w-full px-3 py-2 border border-gray-300 focus:outline-none focus:border-gray-500 transition-colors",
              style: "font-family: 'Noto Sans JP', sans-serif; font-weight: 400;" %>
        </div>
        
        <div>
          <%= form.select :enabled, 
              options_for_select([
                ['すべて', ''],
                ['有効のみ', 'true'],
                ['無効のみ', 'false']
              ], params[:enabled]),
              {},
              class: "px-3 py-2 border border-gray-300 focus:outline-none focus:border-gray-500 transition-colors",
              style: "font-family: 'Noto Sans JP', sans-serif; font-weight: 400;",
              onchange: "this.form.requestSubmit()" %>
        </div>
        
        <% if @tab == 'remote' && @remote_domains.present? %>
          <div>
            <%= form.select :domain, 
                options_for_select([['全ドメイン', '']] + @remote_domains.map { |domain, count| ["#{domain} (#{count})", domain] }, params[:domain]),
                {},
                class: "px-3 py-2 border border-gray-300 focus:outline-none focus:border-gray-500 transition-colors",
                style: "font-family: 'Noto Sans JP', sans-serif; font-weight: 400;",
                onchange: "this.form.requestSubmit()" %>
          </div>
        <% end %>
        
        <%= form.submit "検索", 
            class: "px-3 py-2 border border-gray-300 text-gray-900 hover:bg-gray-50 transition-colors cursor-pointer",
            style: "font-family: 'Noto Sans JP', sans-serif; font-weight: 400;" %>
      </div>
      
      <!-- リモート絵文字発見機能 -->
      <% if @tab == 'remote' %>
        <div class="flex items-center space-x-4">
          <%= form_with url: discover_remote_config_custom_emojis_path, method: :post, class: "flex items-center space-x-4 w-full" do |discovery_form| %>
            <div class="flex-1">
              <%= discovery_form.text_field :domain, 
                  placeholder: "特定ドメインから発見（例: mastodon.social）",
                  class: "w-full px-3 py-2 border border-gray-300 focus:outline-none focus:border-gray-500 transition-colors",
                  style: "font-family: 'Noto Sans JP', sans-serif; font-weight: 400;" %>
            </div>
            <%= discovery_form.submit "発見", 
                class: "px-3 py-2 border border-gray-300 text-gray-900 hover:bg-gray-50 transition-colors cursor-pointer",
                style: "font-family: 'Noto Sans JP', sans-serif; font-weight: 400;" %>
          <% end %>
          <%= button_to "全ドメイン発見", discover_remote_config_custom_emojis_path, 
              method: :post,
              class: "px-3 py-2 border border-gray-300 text-gray-900 hover:bg-gray-50 transition-colors cursor-pointer",
              style: "font-family: 'Noto Sans JP', sans-serif; font-weight: 400;" %>
        </div>
      <% end %>
    <% end %>
  </div>

  <!-- 絵文字一覧 -->
  <%= turbo_frame_tag "emoji_results" do %>
    <%= render "emoji_results", custom_emojis: @custom_emojis %>
  <% end %>
  
  <!-- ボタン -->
  <div class="mt-8 flex justify-between items-center">
    <%= link_to "設定に戻る", config_path, 
        class: "px-4 py-2 border border-gray-300 text-gray-900 hover:bg-gray-50 transition-colors text-sm",
        style: "font-family: 'Noto Sans JP', sans-serif; font-weight: 400;" %>
    <%= link_to "新しい絵文字を追加", new_config_custom_emoji_path, 
        class: "px-4 py-2 border border-gray-300 text-gray-900 hover:bg-gray-50 transition-colors cursor-pointer text-sm",
        style: "font-family: 'Noto Sans JP', sans-serif; font-weight: 400;" %>
  </div>
</div>

<!-- JavaScript -->
<script>
function initializeCheckboxes() {
  const selectAllCheckbox = document.getElementById('select_all');
  const emojiCheckboxes = document.querySelectorAll('.emoji-checkbox');
  
  // 既存のイベントリスナーを削除（重複を避ける）
  if (selectAllCheckbox) {
    selectAllCheckbox.removeEventListener('change', handleSelectAll);
    selectAllCheckbox.addEventListener('change', handleSelectAll);
  }
  
  emojiCheckboxes.forEach(checkbox => {
    checkbox.removeEventListener('change', handleIndividualCheck);
    checkbox.addEventListener('change', handleIndividualCheck);
  });
}

function handleSelectAll() {
  const emojiCheckboxes = document.querySelectorAll('.emoji-checkbox');
  emojiCheckboxes.forEach(checkbox => {
    checkbox.checked = this.checked;
  });
}

function handleIndividualCheck() {
  const selectAllCheckbox = document.getElementById('select_all');
  const emojiCheckboxes = document.querySelectorAll('.emoji-checkbox');
  const checkedCount = document.querySelectorAll('.emoji-checkbox:checked').length;
  
  if (selectAllCheckbox) {
    selectAllCheckbox.checked = checkedCount === emojiCheckboxes.length;
    selectAllCheckbox.indeterminate = checkedCount > 0 && checkedCount < emojiCheckboxes.length;
  }
}

// 初回読み込み時
document.addEventListener('DOMContentLoaded', initializeCheckboxes);

// ページ表示時（ブラウザの戻るボタンなど）
window.addEventListener('pageshow', initializeCheckboxes);

// Turbolinks/Turbo対応（もし使用している場合）
document.addEventListener('turbo:load', initializeCheckboxes);
document.addEventListener('turbolinks:load', initializeCheckboxes);

function confirmBulkAction() {
  const actionType = document.querySelector('select[name="action_type"]').value;
  const checkedBoxes = document.querySelectorAll('.emoji-checkbox:checked');
  
  if (!actionType) {
    alert('操作を選択してください');
    return false;
  }
  
  if (checkedBoxes.length === 0) {
    alert('絵文字を選択してください');
    return false;
  }
  
  const actionNames = {
    'enable': '有効化',
    'disable': '無効化',
    'delete': '削除',
    'copy': 'ローカルにコピー'
  };
  
  const message = `選択された${checkedBoxes.length}個の絵文字を${actionNames[actionType]}しますか？`;
  
  if (actionType === 'delete') {
    return confirm(message + '\n\n削除操作は取り消すことができません。');
  }
  
  return confirm(message);
}
</script>

<% content_for :title, "絵文字を編集 | #{blog_title}" %>
<% content_for :description, "General Letter Publication System based on ActivityPub" %>
<% content_for :head do %>
  <style>body { overflow-y: scroll !important; }</style>
<% end %>

<!-- 絵文字編集ページ -->
<div class="max-w-2xl mx-auto">
  <!-- ヘッダー -->
  <header class="mb-8 text-center">
    <h1 class="page-heading">
      絵文字を編集
    </h1>
  </header>

  <!-- 現在の絵文字表示 -->
  <section class="border border-gray-300 p-6 mb-6">
    <h2 class="text-lg text-gray-900 mb-4 text-normal">
      現在の絵文字
    </h2>
    
    <div class="flex items-center space-x-4">
      <% if @custom_emoji.image.attached? %>
        <%= image_tag @custom_emoji.url, 
            alt: ":#{@custom_emoji.shortcode}:",
            class: "w-16 h-16 object-contain border border-gray-300 p-2" %>
      <% else %>
        <div class="w-16 h-16 bg-gray-200 flex items-center justify-center">
          <span class="text-gray-500">?</span>
        </div>
      <% end %>
      
      <div>
        <div class="font-mono text-lg">:<%= @custom_emoji.shortcode %>:</div>
        <div class="text-sm text-gray-500 space-x-2">
          <% if @custom_emoji.disabled %>
            <span class="text-gray-600 text-xs">無効</span>
          <% else %>
            <span class="text-gray-600 text-xs">有効</span>
          <% end %>
        </div>
      </div>
    </div>
  </section>

  <!-- 絵文字編集フォーム -->
  <%= form_with model: @custom_emoji, url: config_custom_emoji_path(@custom_emoji), method: :patch, local: true, multipart: true, class: "space-y-6" do |form| %>
    
    <!-- 基本情報 -->
    <section class="border border-gray-300 p-6">
      <h2 class="text-lg text-gray-900 mb-4 text-normal">
        基本情報
      </h2>
      
      <div class="space-y-4">
        <div>
          <%= form.label :shortcode, "絵文字名（ショートコード）", 
              class: "block text-sm text-gray-700 mb-2 form-label" %>
          <%= form.text_field :shortcode, 
              pattern: "[a-zA-Z0-9_]+",
              class: "w-full px-3 py-2 border border-gray-300 focus:outline-none focus:border-gray-500 transition-colors font-mono form-input",
              required: true %>
          <p class="text-xs text-gray-500 mt-1 text-light">
            英数字とアンダースコアのみ使用可能。投稿では :<%= @custom_emoji.shortcode %>: のように使います
          </p>
          <% if @custom_emoji.errors[:shortcode].any? %>
            <p class="text-xs text-red-600 mt-1">
              <%= @custom_emoji.errors[:shortcode].first %>
            </p>
          <% end %>
        </div>

        <div>
          <%= form.label :image, "画像ファイル", 
              class: "block text-sm text-gray-700 mb-2 form-label" %>
          <div class="border border-gray-300 border-dashed p-6 text-center hover:border-gray-400 transition-colors">
            <%= form.file_field :image, 
                accept: "image/*",
                class: "hidden",
                id: "emoji_image_input",
                onchange: "previewImage(this)" %>
            <label for="emoji_image_input" class="cursor-pointer">
              <div id="image_preview_container" class="<%= 'hidden' unless @custom_emoji.image.attached? %>">
                <img id="image_preview" 
                     src="<%= @custom_emoji.image.attached? ? @custom_emoji.url : '' %>"
                     class="mx-auto max-w-16 max-h-16 object-contain mb-2">
                <p class="text-sm text-gray-600 text-normal">
                  クリックして変更
                </p>
              </div>
              <div id="upload_placeholder" class="<%= @custom_emoji.image.attached? ? 'hidden' : '' %>">
                <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                  <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <p class="mt-2 text-sm text-gray-600 text-normal">
                  <span class="font-medium">クリックしてファイルを選択</span> またはドラッグ&ドロップ
                </p>
                <p class="text-xs text-gray-500 text-light">
                  PNG, JPG, GIF対応（推奨サイズ: 64x64px）
                </p>
              </div>
            </label>
          </div>
          <p class="text-xs text-gray-500 mt-1 text-light">
            画像を選択しない場合は現在の画像が保持されます
          </p>
          <% if @custom_emoji.errors[:image].any? %>
            <p class="text-xs text-red-600 mt-1">
              <%= @custom_emoji.errors[:image].first %>
            </p>
          <% end %>
        </div>
      </div>
    </section>

    <!-- 表示設定 -->
    <section class="border border-gray-300 p-6">
      <h2 class="text-lg text-gray-900 mb-4 text-normal">
        表示設定
      </h2>
      
      <div class="space-y-4">

        <div>
          <%= form.label :category_id, "カテゴリ", 
              class: "block text-sm text-gray-700 mb-2 form-label" %>
          <%= form.text_field :category_id, 
              placeholder: "例: カスタム",
              class: "w-full px-3 py-2 border border-gray-300 focus:outline-none focus:border-gray-500 transition-colors form-input" %>
          <p class="text-xs text-gray-500 mt-1 text-light">
            絵文字ピッカーでのグループ分けに使用（省略可能）
          </p>
        </div>
      </div>
    </section>

    <!-- プレビュー -->
    <section class="border border-gray-300 p-6">
      <h2 class="text-lg text-gray-900 mb-4 text-normal">
        プレビュー
      </h2>
      
      <div class="p-4">
        <p class="text-sm text-gray-600 mb-2 text-normal">
          投稿での表示例:
        </p>
        <div class="border border-gray-300 p-3 text-sm text-normal">
          テスト送信 <span id="emoji_preview">:<%= @custom_emoji.shortcode %>:</span>
        </div>
      </div>
    </section>

    <!-- エラーメッセージ -->
    <% if @custom_emoji.errors.any? %>
      <div class="bg-red-50 border border-red-200 p-4">
        <div class="flex">
          <svg class="h-5 w-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
          </svg>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-red-800 text-normal">
              エラーが発生しました
            </h3>
            <div class="mt-2 text-sm text-red-700">
              <ul class="list-disc pl-5 space-y-1">
                <% @custom_emoji.errors.full_messages.each do |message| %>
                  <li><%= message %></li>
                <% end %>
              </ul>
            </div>
          </div>
        </div>
      </div>
    <% end %>

    <!-- 送信ボタン -->
    <div class="flex justify-between">
      <%= link_to "キャンセル", config_custom_emojis_path,
          class: "px-3 py-1 border border-gray-300 text-gray-900 hover:bg-gray-50 transition-colors cursor-pointer text-sm btn-secondary btn-sm" %>
      <%= form.submit "保存", 
          class: "px-3 py-1 border border-gray-300 text-gray-900 hover:bg-gray-50 transition-colors cursor-pointer text-sm btn-secondary btn-sm" %>
    </div>
  <% end %>
</div>

<!-- JavaScript -->
<script>
function previewImage(input) {
  const file = input.files[0];
  const preview = document.getElementById('image_preview');
  const previewContainer = document.getElementById('image_preview_container');
  const placeholder = document.getElementById('upload_placeholder');
  
  if (file) {
    const reader = new FileReader();
    
    reader.onload = function(e) {
      preview.src = e.target.result;
      previewContainer.classList.remove('hidden');
      placeholder.classList.add('hidden');
      
      // プレビューテキストを更新
      updateEmojiPreview();
    };
    
    reader.readAsDataURL(file);
  }
}

function updateEmojiPreview() {
  const shortcodeInput = document.querySelector('input[name="custom_emoji[shortcode]"]');
  const emojiPreview = document.getElementById('emoji_preview');
  const imagePreview = document.getElementById('image_preview');
  
  if (shortcodeInput && emojiPreview) {
    const shortcode = shortcodeInput.value || '<%= @custom_emoji.shortcode %>';
    
    if (imagePreview && imagePreview.src) {
      emojiPreview.innerHTML = `<img src="${imagePreview.src}" alt=":${shortcode}:" class="inline-block w-4 h-4 object-contain align-text-bottom" style="margin: 0 2px;">`;
    } else {
      emojiPreview.textContent = `:${shortcode}:`;
    }
  }
}

// ページ読み込み時にプレビューを初期化
document.addEventListener('DOMContentLoaded', function() {
  updateEmojiPreview();
  
  const shortcodeInput = document.querySelector('input[name="custom_emoji[shortcode]"]');
  if (shortcodeInput) {
    shortcodeInput.addEventListener('input', updateEmojiPreview);
  }
});

// ドラッグ&ドロップ対応
document.addEventListener('DOMContentLoaded', function() {
  const dropZone = document.querySelector('.border-dashed');
  const fileInput = document.getElementById('emoji_image_input');
  
  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
    dropZone.addEventListener(eventName, preventDefaults, false);
  });
  
  function preventDefaults(e) {
    e.preventDefault();
    e.stopPropagation();
  }
  
  ['dragenter', 'dragover'].forEach(eventName => {
    dropZone.addEventListener(eventName, highlight, false);
  });
  
  ['dragleave', 'drop'].forEach(eventName => {
    dropZone.addEventListener(eventName, unhighlight, false);
  });
  
  function highlight(e) {
    dropZone.classList.add('border-gray-500', 'bg-gray-50');
  }
  
  function unhighlight(e) {
    dropZone.classList.remove('border-gray-500', 'bg-gray-50');
  }
  
  dropZone.addEventListener('drop', handleDrop, false);
  
  function handleDrop(e) {
    const dt = e.dataTransfer;
    const files = dt.files;
    
    if (files.length > 0) {
      fileInput.files = files;
      previewImage(fileInput);
    }
  }
});
</script>

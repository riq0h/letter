require "active_support/core_ext/integer/time"

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # Make code changes take effect immediately without server restart.
  config.enable_reloading = true

  # Do not eager load code on boot.
  config.eager_load = false

  # Show full error reports.
  config.consider_all_requests_local = true

  # Enable server timing.
  config.server_timing = true

  # Enable/disable Action Controller caching. By default Action Controller caching is disabled.
  # Run rails dev:cache to toggle Action Controller caching.
  if Rails.root.join("tmp/caching-dev.txt").exist?
    config.action_controller.perform_caching = true
    config.action_controller.enable_fragment_cache_logging = true
    config.public_file_server.headers = { "cache-control" => "public, max-age=#{2.days.to_i}" }
  else
    config.action_controller.perform_caching = false
  end

  # Change to :null_store to avoid any caching.
  # config.cache_store = :memory_store
  
  # リモート画像キャッシュのためにSolid Cacheを使用
  config.cache_store = :solid_cache_store

  # 開発環境でバックグラウンドジョブにSolid Queueを使用
  config.active_job.queue_adapter = :solid_queue

  # アップロードファイルを保存 - S3_ENABLED=trueの場合はCloudflare R2、そうでなければローカルストレージ
  config.active_storage.service = ENV['S3_ENABLED'] == 'true' ? :cloudflare_r2 : :local

  # Don't care if the mailer can't send.
  config.action_mailer.raise_delivery_errors = false

  # Make template changes take effect immediately.
  config.action_mailer.perform_caching = false

  # メーラーテンプレートで生成されるリンクで使用するドメインを設定
  # 注意: ActivityPub設定はinitializersで設定されるため、ENVフォールバックを使用
  domain = ENV.fetch('ACTIVITYPUB_DOMAIN', 'localhost:3000')
  protocol = ENV.fetch('ACTIVITYPUB_PROTOCOL', 'https')
  host, port = domain.split(':')
  
  # Action MailerとActive Storageの両方のURLオプションを設定
  url_options = if port && port != '80' && port != '443'
    { host: host, port: port.to_i }
  else
    { host: domain }
  end
  
  config.action_mailer.default_url_options = url_options
  
  # URL生成用のActive Storageホストを設定
  Rails.application.routes.default_url_options = url_options.merge(protocol: protocol)
  
  # インスタンスのローカルドメイン設定
  config.x.local_domain = domain

  # Print deprecation notices to the Rails logger.
  config.active_support.deprecation = :log

  # Raise an error on page load if there are pending migrations.
  config.active_record.migration_error = :page_load

  # Highlight code that triggered database queries in logs.
  config.active_record.verbose_query_logs = true

  # Append comments with runtime information tags to SQL queries in logs.
  config.active_record.query_log_tags_enabled = true

  # Highlight code that enqueued background job in logs.
  config.active_job.verbose_enqueue_logs = true

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  config.action_view.annotate_rendered_view_with_filenames = true

  # Uncomment if you wish to allow Action Cable access from any origin.
  # config.action_cable.disable_request_forgery_protection = true

  # Raise error when a before_action's only/except options reference missing actions.
  config.action_controller.raise_on_missing_callback_actions = true

  # Apply autocorrection by RuboCop to files generated by `bin/rails generate`.
  # config.generators.apply_rubocop_autocorrect_after_generate!

  # Action Cable configuration
  config.action_cable.mount_path = '/api/v1/streaming'
  config.action_cable.url = "wss://#{ENV.fetch('ACTIVITYPUB_DOMAIN', 'localhost:3000')}/api/v1/streaming"
  config.action_cable.allowed_request_origins = [
    "https://#{ENV.fetch('ACTIVITYPUB_DOMAIN', 'localhost:3000')}",
    %r{https://.*},
    %r{http://.*}  # 開発環境ではHTTPも許可
  ]

  # Disable host checking for development to allow tunnel services
  config.hosts.clear
end

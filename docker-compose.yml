version: '3.8'

services:
  web:
    build: .
    ports:
      - "3000:3000"
    environment:
      # ActivityPub設定
      ACTIVITYPUB_DOMAIN: ${ACTIVITYPUB_DOMAIN:-localhost:3000}
      ACTIVITYPUB_PROTOCOL: ${ACTIVITYPUB_PROTOCOL:-http}
      
      # インスタンス設定
      INSTANCE_NAME: ${INSTANCE_NAME:-letter}
      INSTANCE_DESCRIPTION: ${INSTANCE_DESCRIPTION:-General Letter Publication System based on ActivityPub}
      CONTACT_EMAIL: ${CONTACT_EMAIL:-admin@localhost}
      MAINTAINER_NAME: ${MAINTAINER_NAME:-letter Administrator}
      
      # 機能フラグ
      FEDERATION_ENABLED: ${FEDERATION_ENABLED:-true}
      
      # オブジェクトストレージ設定（Cloudflare R2）
      S3_ENABLED: ${S3_ENABLED:-false}
      S3_ENDPOINT: ${S3_ENDPOINT:-}
      S3_BUCKET: ${S3_BUCKET:-}
      R2_ACCESS_KEY_ID: ${R2_ACCESS_KEY_ID:-}
      R2_SECRET_ACCESS_KEY: ${R2_SECRET_ACCESS_KEY:-}
      S3_REGION: ${S3_REGION:-auto}
      S3_PROTOCOL: ${S3_PROTOCOL:-https}
      S3_PERMISSION: ${S3_PERMISSION:-private}
      S3_FORCE_SINGLE_REQUEST: ${S3_FORCE_SINGLE_REQUEST:-true}
      S3_ALIAS_HOST: ${S3_ALIAS_HOST:-}
      
      # Rails設定
      RAILS_ENV: ${RAILS_ENV:-development}
      RAILS_LOG_LEVEL: ${RAILS_LOG_LEVEL:-info}
      
    volumes:
      # データベース永続化
      - ./db:/app/db
      
      # ログ永続化
      - ./log:/app/log
      
      # メディアファイル永続化
      - ./public/system:/app/public/system
      
      # オプション: .envファイルが存在する場合はマウント
      - ./.env:/app/.env:ro
      
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/up"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Optional: Add volumes for explicit persistence
volumes:
  letter_db:
    driver: local
  letter_media:
    driver: local
  letter_logs:
    driver: local
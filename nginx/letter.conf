upstream letter_app {
    server 127.0.0.1:3001;
    keepalive 32;
}

# HTTP -> HTTPS リダイレクト
server {
    listen 80;
    server_name your_domain;
    return 301 https://$server_name$request_uri;
}

# メインサーバー設定 (HTTPS)
server {
    listen 443 ssl http2;
    server_name your_domain;

    # SSL 証明書設定
    ssl_certificate /etc/ssl/certs/your_domain.pem;
    ssl_certificate_key /etc/ssl/private/your_domain.key;
    
    # SSL セキュリティ設定
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=63072000" always;
    
    # セキュリティヘッダー
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # ActivityPub特有のヘッダー
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Accept, Authorization, Content-Type, X-Requested-With" always;
    
    # ファイルアップロード制限
    client_max_body_size 100M;
    
    # タイムアウト設定
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # gzip圧縮
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types
        application/atom+xml
        application/json
        application/ld+json
        application/activity+json
        application/rss+xml
        application/xml
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # アップロードファイルの配信
    location /uploads/ {
        proxy_pass http://letter_app;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # アセットファイルの配信
    location /assets/ {
        proxy_pass http://letter_app;
        proxy_cache_valid 200 30d;
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Well-known URIs (.well-known/*)
    location /.well-known/ {
        proxy_pass http://letter_app;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        
        # ActivityPub用のContent-Type設定
        proxy_set_header Accept "application/activity+json, application/ld+json, application/json, text/html";
    }
    
    # ActivityPub エンドポイント
    location ~ ^/(users|activities|inbox)/ {
        proxy_pass http://letter_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        
        # ActivityPub用のContent-Type設定
        proxy_set_header Accept "application/activity+json, application/ld+json, application/json, text/html";
        
        # キャッシュ無効化
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # WebSocket接続
    location /api/v1/streaming/ {
        proxy_pass http://letter_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }
    
    # API エンドポイント
    location /api/ {
        proxy_pass http://letter_app;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        
        # CORS対応
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Authorization, Content-Type, X-Requested-With" always;
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
    }
    
    # OAuth認証
    location /oauth/ {
        proxy_pass http://letter_app;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
    }
    
    # メインアプリケーション
    location / {
        proxy_pass http://letter_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        
        # プロキシバッファリング設定
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # ヘルスチェック用エンドポイント
    location /up {
        proxy_pass http://letter_app;
        proxy_set_header Host $http_host;
        access_log off;
    }
    
    # robots.txt
    location = /robots.txt {
        proxy_pass http://letter_app;
        proxy_set_header Host $http_host;
        expires 1d;
    }
    
    # favicon.ico
    location = /favicon.ico {
        proxy_pass http://letter_app;
        proxy_set_header Host $http_host;
        expires 7d;
        access_log off;
    }
}
